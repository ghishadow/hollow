[unstable]
codegen-backend = true

[profile.dev]
codegen-backend = "cranelift"

[build]
jobs = 4
incremental = true  # whether or not to enable incremental compilation

[alias]
b = "build"

[env]
CC  = "clang"
CXX = "clang++"
MALLOC_CONF="thp:always,metadata_thp:always"
# CXXSTDLIB = "libc++"
#CXXFLAGS = "-std=c++17"


[future-incompat-report]
frequency = 'always'

[registries.crates-io]
protocol = "sparse"


[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = [
    "-C",
    "link-arg=-fuse-ld=mold",
]
[target.aarch64-unknown-linux-gnu]
linker = "aarch64-linux-gnu-gcc"
rustflags = [
    "-Z",
    "new-llvm-pass-manager=no",
]
[target.aarch64-unknown-linux-musl]
linker = "/usr/bin/clang"
rustflags = ["-C", "link-arg=-fuse-ld=mold"]
[target.x86_64-unknown-linux-musl]
  linker = "clang"
  rustflags = ["-C", "link-arg=-fuse-ld=mold"]

[target.aarch64-apple-darwin]
  linker = "/usr/bin/clang"
  rustflags = ["-C", "link-arg=-fuse-ld=ld"]

  

[target.x86_64-pc-windows-msvc]
rustflags = ["-C", "target-feature=+crt-static"]
linker = "lld-link.exe"
[target.aarch64-pc-windows-msvc]
rustflags = ["-C", "target-feature=+crt-static"]
linker = "lld-link.exe"

[target.x86_64-unknown-linux-openbsd]
cc = "x86_64-openbsd-cc"
linker = "clang-16" 
